
	NOLIST
; PICBASIC PRO(TM) Compiler 3.0.1.1, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 

LABEL?L macro Label
        RST?RP
    ifdef PM_USED
        LALL
Label
        XALL
    else
Label
    endif
    endm

ADD?BBB macro Bin1, Bin2, Bout
    if ((Bout) == (Bin1))
        MOVE?BA Bin2
        CHK?RP  Bin1
        addwf   Bin1, F
    else
      if ((Bout) == (Bin2))
        MOVE?BA Bin1
        CHK?RP  Bin2
        addwf   Bin2, F
      else
        MOVE?BA Bin1
        CHK?RP  Bin2
        addwf   Bin2, W
        MOVE?AB Bout
      endif
    endif
    endm

ADD?BCB macro Bin, Cin, Bout
    if ((Bout) == (Bin))
      if ((Cin) == 1)
        CHK?RP  Bout
        incf    Bout, F
      else
        movlw   Cin
        CHK?RP  Bin
        addwf   Bin, F
      endif
    else
      if ((Cin) == 1)
        CHK?RP  Bin
        incf    Bin, W
        MOVE?AB Bout
      else
        movlw   Cin
        CHK?RP  Bin
        addwf   Bin, W
        MOVE?AB Bout
      endif
    endif
    endm

MUL?BCB macro Bin, Cin, Bout
        MOVE?BW Bin, R3
        MOVE?CW Cin, R1
        L?CALL  MUL
        MOVE?AB Bout
    endm
MUL_USED = 1

SUB?BCB macro Bin, Cin, Bout
    if ((Bout) == (Bin))
      if ((Cin) == 1)
        CHK?RP  Bout
        decf    Bout, F
      else
        movlw   Cin
        CHK?RP  Bout
        subwf   Bout, F
      endif
    else
      if ((Cin) == 1)
        CHK?RP  Bin
        decf    Bin, W
      else
        movlw   Cin
        CHK?RP  Bin
        subwf   Bin, W
      endif
        MOVE?AB Bout
    endif
    endm

OR?BCB macro Bin, Cin, Bout
    if (Bout == Bin)
        movlw   Cin
        CHK?RP  Bin
        iorwf   Bin, F
    else
        movlw   Cin
        CHK?RP  Bin
        iorwf   Bin, W
        MOVE?AB Bout
    endif
    endm

LAND?BBW macro Bin1, Bin2, Wout
        MOVE?BB Bin1, FSR
        MOVE?BA Bin2
        L?CALL  LAND
        MOVE?AB Wout
        movwf   Wout + 1
    endm
LAND_USED = 1

CMPF?WL macro Win, Label
        CLRWDT?
        MOVE?BA Win
        iorwf   (Win) + 1, W
        BIT?GOTO 1, STATUS, Z, Label
    endm

CMPEQ?BCB macro Bin, Cin, Bout
    if (((Cin) > -100h) & ((Cin) < 100h))
        MOVE?BA Bin
        sublw   Cin
	btfss	STATUS, Z
        movlw   -1
	xorlw	0ffh
        MOVE?AB Bout
    else
        CHK?RP  Bout
        clrf    Bout
    endif
    endm

CMPEQ?TCB macro Regin, Bitin, Cin, Bout
    if (((Cin) == 0) | ((Cin) == 1))
	clrw
	CHK?RP	Regin
      if ((Cin) == 0)
	btfss Regin, Bitin
      else
	btfsc Regin, Bitin
      endif
        movlw   -1
        MOVE?AB Bout
    else
        CHK?RP  Bout
        clrf    Bout
    endif
    endm

CMPEQ?BBL macro Bin1, Bin2, Label
        CLRWDT?
        MOVE?BA Bin1
        CHK?RP  Bin2
        subwf   Bin2, W
        BIT?GOTO 1, STATUS, Z, Label
    endm

CMPEQ?BCL macro Bin, Cin, Label
    if (((Cin) > -100h) & ((Cin) < 100h))
        CLRWDT?
        MOVE?BA Bin
        sublw   Cin
        BIT?GOTO 1, STATUS, Z, Label
    endif
    endm

CMPEQ?TCL macro Regin, Bitin, Cin, Label
    if (((Cin) == 0) | ((Cin) == 1))
        CLRWDT?
        BIT?GOTO Cin, Regin, Bitin, Label
    endif
    endm

CMPGT?BBL macro Bin1, Bin2, Label
        CLRWDT?
        MOVE?BA Bin1
        CHK?RP  Bin2
        subwf   Bin2, W
        BIT?GOTO 0, STATUS, C, Label
    endm

CMPGT?BCL macro Bin, Cin, Label
    if ((Cin) < 0)
        L?GOTO  Label
    else
      if ((Cin) < 0ffh)
        CLRWDT?
        MOVE?CA (Cin) + 1
        CHK?RP  Bin
        subwf   Bin, W
        BIT?GOTO 1, STATUS, C, Label
      endif
    endif
    endm

CMPLE?BCL macro Bin, Cin, Label
    if ((Cin) >= 0ffh)
        L?GOTO  Label
    else
      if ((Cin) >= 0)
        CLRWDT?
        MOVE?CA (Cin) + 1
        CHK?RP  Bin
        subwf   Bin, W
        BIT?GOTO 0, STATUS, C, Label
      endif
    endif
    endm

CMPLT?BBL macro Bin1, Bin2, Label
        CLRWDT?
        MOVE?BA Bin2
        CHK?RP  Bin1
        subwf   Bin1, W
        BIT?GOTO 0, STATUS, C, Label
    endm

CMPNE?BCL macro Bin, Cin, Label
    if (((Cin) > -100h) & ((Cin) < 100h))
        CLRWDT?
        MOVE?BA Bin
        sublw   Cin
        BIT?GOTO 0, STATUS, Z, Label
    else
        L?GOTO  Label
    endif
    endm

CMPNE?TCL macro Regin, Bitin, Cin, Label
    if ((Cin) == 0)
        CLRWDT?
        BIT?GOTO 1, Regin, Bitin, Label
    else
      if ((Cin) == 1)
        CLRWDT?
        BIT?GOTO 0, Regin, Bitin, Label
      else
        L?GOTO  Label
      endif
    endif
    endm

ASM? macro
        RST?RP
    endm

END? macro
    local loop
loop    sleep
        L?GOTO  loop
    endm

ENDASM? macro
    endm

GOSUB?L macro Label
    local dlabel
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
      ifdef DEBUG_STACK_ADDR
        bcf     STATUS, C
        rlf     DEBUG_STACK, W
        addlw   DEBUG_STACK_ADDR
        movwf   FSR
        movlw   low (dlabel)
        movwf   INDF
        incf    FSR, F
        movlw	high (dlabel)
        movwf   INDF
      endif
        incf    DEBUG_STACK, F
    endif
        L?CALL  Label
dlabel
    endm

GOTO?L macro Label
        L?GOTO  Label
    endm

HIGH?T macro Regin, Bitin
        MOVE?CT 1, Regin, Bitin
        MOVE?CT 0, ((Regin) + 80h), Bitin
    endm

INPUT?T macro Regin, Bitin
        MOVE?CT 1, ((Regin) + 80h), Bitin
    endm

LOOKUP?BCLB macro Bin, Cin, Label, Bout
    local dojump, valtbl
        MOVE?BA Bin
        sublw   (Cin) - 1
        BIT?GOTO 0, STATUS, C, Label
        L?CALL  dojump
        MOVE?AB Bout
        L?GOTO  Label
dojump  movlw   high (valtbl)
        movwf   PCLATH
        MOVE?BA Bin
        RST?RP
	addlw	low (valtbl)
	btfsc	STATUS, C
	incf	PCLATH, F
	movwf	PCL
valtbl
    endm

LURET?C macro Cin
        retlw   Cin
    endm

LOW?T macro Regin, Bitin
        MOVE?CT 0, Regin, Bitin
        MOVE?CT 0, ((Regin) + 80h), Bitin
    endm

NAP?C macro Cin
        movlw	Cin
        L?CALL  NAP
    endm
NAP_USED = 1

NEXT?BCL macro Bin, Cin, Label
    if ((Cin) == 1)
        CHK?RP  Bin
      if ((PREV_BANK == 0) & (CODE_SIZE <= 2))
        incfsz  Bin, F
        goto    Label
      else
        incf    Bin, F
        BIT?GOTO 0, STATUS, Z, Label
      endif
    else
        movlw   Cin
        CHK?RP  Bin
        addwf   Bin, F
      if ((Cin) <= 255)
        BIT?GOTO 0, STATUS, C, Label
      endif
    endif
    endm

PAUSE?C macro Cin
    if (((Cin) >> 8) == 0)
        MOVE?CA Cin
        L?CALL  PAUSE
    else
        MOVE?CB (Cin) >> 8, R1 + 1
        MOVE?CA low (Cin)
        L?CALL  PAUSEL
    endif
    endm
PAUSE_USED = 1

PAUSEUS?C macro Cin
    if (((Cin) >> 8) == 0)
        movlw   Cin
        L?CALL  PAUSEUS
    else
        MOVE?CB (Cin) >> 8, R0 + 1
        MOVE?CA low (Cin)
        L?CALL  PAUSEUSL
    endif
    endm
PAUSEUS_USED = 1

READADDRESS?B macro Bin
        MOVE?BB Bin, EEADR
    endm

READADDRESS?C macro Cin
        MOVE?CB Cin, EEADR
    endm

READ?B macro Bout
        L?CALL  READ
        MOVE?AB Bout
    endm
READ_USED = 1

RETURN? macro
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
        decf    DEBUG_STACK, F
    endif
        RST?RP
        return
    endm

STOP? macro
    local loop
loop    CLRWDT?
        L?GOTO  loop
    endm

WRITEADDRESS?B macro Bin
        MOVE?BB Bin, EEADR
    endm

WRITE?B macro Bin
        MOVE?BA Bin
        L?CALL  WRITE
    endm
WRITE_USED = 1


	LIST
